{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1mL1KU-oucqtey2h7RUdPVS7KUCK5nxbc","timestamp":1718322620158},{"file_id":"1s-4r2_9E7Q3xHl21KiYSq4EuMDOiDz3d","timestamp":1692422742294},{"file_id":"1s3sp1oKt4S2yNH0Ya0LNY3-tqTpt0ZJI","timestamp":1687307597613}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Ver 1.0\n","\n","バージョンについて：配布時点で1.0。修正がある場合バージョンも修正します。自分のバックアップと比較の際に参考にしてください。\n"],"metadata":{"id":"sorFGO_ISkrX"}},{"cell_type":"code","source":["## 可視化で日本語の文字化けを回避するため\n","\n","#matplotlibの読み込み\n","#このセールを実行し、パッケージを読み込みます\n","import matplotlib.pyplot as plt #<-英語だけでいいなら、これのみでOK\n","plt.style.use('seaborn')\n","\n","!pip install japanize-matplotlib #<-matplotlibは日本語に対応してないため、日本語対応のパッケージを追加で入れます。\n","\n","import japanize_matplotlib  #<-日本語に対応するため\n","import seaborn as sns #<- 別の可視化ツールですが、日本語フォントを導入するため使います\n","sns.set(font=\"IPAexGothic\") #<-日本語フォントを指定"],"metadata":{"id":"TPeEaVPyIGw0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718927603007,"user_tz":-540,"elapsed":30098,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"3e5db379-6234-433c-ac89-5f8e4f6c5309"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-1-f53d29b99224>:6: MatplotlibDeprecationWarning: The seaborn styles shipped by Matplotlib are deprecated since 3.6, as they no longer correspond to the styles shipped by seaborn. However, they will remain available as 'seaborn-v0_8-<style>'. Alternatively, directly use the seaborn API instead.\n","  plt.style.use('seaborn')\n"]},{"output_type":"stream","name":"stdout","text":["Collecting japanize-matplotlib\n","  Downloading japanize-matplotlib-1.1.3.tar.gz (4.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.1/4.1 MB\u001b[0m \u001b[31m18.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from japanize-matplotlib) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (4.53.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.4.5)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.25.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->japanize-matplotlib) (1.16.0)\n","Building wheels for collected packages: japanize-matplotlib\n","  Building wheel for japanize-matplotlib (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for japanize-matplotlib: filename=japanize_matplotlib-1.1.3-py3-none-any.whl size=4120257 sha256=8f595f2a0bd17bf533c8a8d633cad13dc631ee8e84f3bb0cbe3ba65bd2bfa8c4\n","  Stored in directory: /root/.cache/pip/wheels/61/7a/6b/df1f79be9c59862525070e157e62b08eab8ece27c1b68fbb94\n","Successfully built japanize-matplotlib\n","Installing collected packages: japanize-matplotlib\n","Successfully installed japanize-matplotlib-1.1.3\n"]}]},{"cell_type":"markdown","source":["#9. <font color='crimson'>分類問題(決定木、ランダムフォーレスト）</font>\n","\n","**今日のポイント**：\n","\n","- sklearnにおけるモデル\n","\n","- 様々な分類器\n","\n","- 交差検証法\n","\n","\n"],"metadata":{"id":"I7eyvF2v1ICU"}},{"cell_type":"markdown","source":["今回からの講義では、モデル訓練に`statsmodels`ではなく、`sklearn`を使います（決定木、ランダムフォーレストやサポートベクトルマシーンがないため。）\n","\n","まず最初に、`statsmodels`と`sklearn`の使い方の違いについて説明します。"],"metadata":{"id":"LrGtlp3ewctV"}},{"cell_type":"markdown","source":["- <font color='crimson'>`statesmodels`</font>でのロジスティクス回帰\n","\n","```python\n","from statsmodels.discrete.discrete_model import Logit\n","\n","# 1. モデル訓練\n","model = Logit(y_train, sm.add_constant(X_train)) # ここでデータを入力\n","result= model.fit() # ここではresultで訓練結果を受け取る\n","\n","# 2. 係数確認\n","print(result.params) # 切片項と偏回帰係数\n","\n","# 3. モデル予測\n","pred = result.predict(sm.add_constant(X_test))\n","pred2 = np.round(pred).astype(int) # 確率を１，０に変換\n","```"],"metadata":{"id":"ecaDPuxcw-Vk"}},{"cell_type":"markdown","source":["- <font color='crimson'>`sklearn`</font>でのロジスティクス回帰\n","\n","```python\n","from sklearn.linear_model import LogisticRegression\n","\n","# 1. モデル訓練\n","model = LogisticRegression(fit_intercept=True, penalty='l2', C=1)\n","# fit_intercept:切片項入れるかどうか,\n","# penalty: 'l1', 'l2', None で正則項をコントロール\n","# C: 1/alphaで、高いほど正則項が緩くなる。\n","model.fit(X_train, y_train) # ここではresultでデータ入力、注意：X,ｙの順番であること！\n","\n","# 2. 係数確認\n","print(model.intercept_) # 切片項\n","print(model.coef_) # 偏回帰係数\n","\n","# 3. モデル予測\n","pred = model.predict(X_test) # 変換必要なし\n","```"],"metadata":{"id":"x_JAa2Xvxnfk"}},{"cell_type":"markdown","source":["## 9.1 <font color=\"Crimson\">決定木 (Decision Tree)</font>\n","\n","　もう一つの有名な分類器である決定木を紹介します。決定木は線形回帰やロジスティクス回帰と異なり、説明変数を一つずつ逐次的に分類し、分類（分岐）に使う変数をノード(Node)、分類されたグループはリーフ(Leaf)と呼ばれています。上からノードにより分岐するリーフが広がる木のようにみえるため、決定木と呼ばれています。決定木にもいくつか種類がありますが、この講義では最も代表的な手法の一つである**CART(Classification And Regression Trees)**について解説します。\n","\n","　シミュレーションで発生させたデータに決定木を応用し、分析結果を見ながら決定木の特長を解説します。"],"metadata":{"id":"PU1tYwrLjHGe"}},{"cell_type":"code","source":["# シミュレーション２ 非線形な部分を入れます\n","\n","# まずこのコードを実行してください。\n","import numpy as np\n","import pandas as pd\n","\n","def ice_simulator_classfier2(base=-0.5, summer_coef=2, rain_coef=-1.3, holiday_coef= 0.5, cross1_coef=0.2, cross2_coef=-1,  day =1000, seed= 0):\n","  np.random.seed(seed)\n","\n","  summer = np.random.binomial(1, 0.5, day)\n","  rain = np.random.binomial(1, 0.3, day)\n","  holiday = np.random.binomial(1, 0.1, day)\n","\n","  prob = logistic (  base + summer_coef * summer + rain_coef * rain +\n","                    holiday * holiday_coef + cross1_coef * summer * holiday + cross2_coef * rain * holiday +  np.random.normal(0, 1, day) )\n","\n","  soldout = np.array([np.random.binomial(1,p) for p in prob])\n","\n","  df = pd.DataFrame(np.vstack([summer, rain, holiday, soldout]).T,columns = ['夏','雨','祝日','完売'] )\n","\n","  return df\n","\n","# Logistic\n","def logistic(x):\n","  return 1/(1 + np.exp(-x) )\n","\n","df = ice_simulator_classfier2(day=1000)\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(df[['夏','雨','祝日']],df['完売'], test_size=0.2, random_state=0)\n","\n","display(df.head(20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"AKTgCB9d_Yh_","executionInfo":{"status":"ok","timestamp":1718323349383,"user_tz":-540,"elapsed":768,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"22df742e-3f87-41bd-8a5a-0ca537375966"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["    夏  雨  祝日  完売\n","0   1  0   0   1\n","1   1  0   0   1\n","2   1  0   0   1\n","3   1  1   0   1\n","4   0  0   0   0\n","5   1  1   0   1\n","6   0  0   0   1\n","7   1  0   0   1\n","8   1  0   0   1\n","9   0  1   0   0\n","10  1  0   0   0\n","11  1  0   0   0\n","12  1  0   0   1\n","13  1  0   0   1\n","14  0  0   0   0\n","15  0  0   0   0\n","16  0  0   0   0\n","17  1  0   0   1\n","18  1  0   0   1\n","19  1  1   1   1"],"text/html":["\n","  <div id=\"df-3573b735-97c1-4524-8a49-2c52f97f21ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>夏</th>\n","      <th>雨</th>\n","      <th>祝日</th>\n","      <th>完売</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3573b735-97c1-4524-8a49-2c52f97f21ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3573b735-97c1-4524-8a49-2c52f97f21ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3573b735-97c1-4524-8a49-2c52f97f21ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5fc40a84-dacc-4e09-b944-52db03f6414f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5fc40a84-dacc-4e09-b944-52db03f6414f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5fc40a84-dacc-4e09-b944-52db03f6414f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"\\u590f\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u96e8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u795d\\u65e5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u5b8c\\u58f2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["### <font color='crimson'>[実践1] sklearnでロジスティクス回帰 (10mins)</font>\n","\n","statsmodel同様に、\n","\n","1. モデルを訓練\n","\n","2. 係数を確認\n","\n","3. テストデータにおける予測を行う\n","\n","4. 評価関数`my_evaluation`を使ってみよう。\n","\n","をやってみましょう。\n","\n","★チャレンジ★\n","\n","早めにできた人はテスト評価を見ながら、正則項などチューニングしてみてください。"],"metadata":{"id":"-EqbSHl3zqQu"}},{"cell_type":"markdown","source":["- statsmodelsで"],"metadata":{"id":"cM_hWSd-__3X"}},{"cell_type":"code","source":["from statsmodels.discrete.discrete_model import Logit\n","import statsmodels.api as sm\n","\n","# 1. モデル訓練\n","model = Logit(y_train, sm.add_constant(X_train)) # ここでデータを入力\n","result= model.fit() # ここではresultで訓練結果を受け取る\n","\n","# 2. 係数確認\n","print(result.params) # 切片項と偏回帰係数\n","\n","# 3. モデル予測\n","pred = result.predict(sm.add_constant(X_test))\n","pred2 = np.round(pred).astype(int) # 確率を１，０に変換\n","pred2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uv6st-lnAA_4","executionInfo":{"status":"ok","timestamp":1718323424430,"user_tz":-540,"elapsed":1069,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"ebad8d10-2eb9-4cd4-da03-216fd6886043"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Optimization terminated successfully.\n","         Current function value: 0.572996\n","         Iterations 5\n","const   -0.462159\n","夏        1.822032\n","雨       -1.307958\n","祝日       0.649015\n","dtype: float64\n"]},{"output_type":"execute_result","data":{"text/plain":["993    1\n","859    1\n","298    1\n","553    1\n","672    1\n","      ..\n","679    0\n","722    0\n","215    1\n","653    0\n","150    0\n","Length: 200, dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["- sklearnで同じことをやってみましょう。"],"metadata":{"id":"1_9r3UjxC6Ed"}},{"cell_type":"code","source":["#my_evaluation をつくる\n","from sklearn.metrics import confusion_matrix, precision_score, recall_score, accuracy_score, f1_score\n","\n","def my_evaluation(y, pred):\n","  # 正解と予測値を入れると自動で評価してくれます。\n","  print('混同行列:')\n","  print(confusion_matrix(y, pred))\n","  accuracy = accuracy_score(y, pred)\n","  precision = precision_score(y, pred)\n","  recall = recall_score(y, pred)\n","  f1 = f1_score(y, pred)\n","\n","  print(\"正解率: %.3f\" % accuracy)\n","  print(\"精度: %.3f\" % precision)\n","  print(\"再現率: %.3f\" % recall)\n","  print(\"F1スコア: %.3f\" % f1)"],"metadata":{"id":"IsvpQfVutMaW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","# 1. モデル訓練\n","model = LogisticRegression(fit_intercept=True, penalty='l2', C=1)\n","# fit_intercept:切片項入れるかどうか,\n","# penalty: 'l1', 'l2', None で正則項をコントロール\n","# C: 1/alphaで、高いほど正則項が緩くなる。\n","model.fit(X_train, y_train) # ここではresultでデータ入力、注意：X,ｙの順番であること！\n","\n","# 2. 係数確認\n","print(model.intercept_) # 切片項\n","print(model.coef_) # 偏回帰係数\n","\n","# 3. モデル予測\n","print('*test data*')\n","pred = model.predict(X_test) # 変換必要なし\n","my_evaluation(y_test, pred) #4\n","print('*train data*')\n","pred2 = model.predict(X_train) # 変換必要なし\n","my_evaluation(y_train , pred2) #4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZEp1LR4CD4d4","executionInfo":{"status":"ok","timestamp":1718323825416,"user_tz":-540,"elapsed":323,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"0348b37a-5b6c-4579-ab82-1635736ccdc1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-0.44683352]\n","[[ 1.76346862 -1.25599193  0.60262023]]\n","*test data*\n","混同行列:\n","[[68 30]\n"," [34 68]]\n","正解率: 0.680\n","精度: 0.694\n","再現率: 0.667\n","F1スコア: 0.680\n","*train data*\n","混同行列:\n","[[267 123]\n"," [113 297]]\n","正解率: 0.705\n","精度: 0.707\n","再現率: 0.724\n","F1スコア: 0.716\n"]}]},{"cell_type":"markdown","source":["- **sklearn**で決定木"],"metadata":{"id":"Zl0rSj4Hi87j"}},{"cell_type":"markdown","source":["sklearnの使い方が分かったところ、決定木を実行してみましょう。"],"metadata":{"id":"g30MfOYoz1Ad"}},{"cell_type":"code","source":["# 1. まずパッケージを読み込みます\n","from sklearn import tree\n","\n","# 2. 決定木を定義\n","#logisc = LogisticRegression(C=0.1) hikaku you\n","dtree = tree.DecisionTreeClassifier(max_depth=3) # max_depthで木の高さ(深度)を設定\n","\n","# アイスクリームのシミュレーションデータで訓練\n","dtree.fit(X_train, y_train)\n","\n","# 可視化\n","\n","plt.figure(figsize=(15,15))\n","\n","tree.plot_tree(dtree, feature_names=X_train.columns, fontsize=12, filled=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":870},"id":"5RSdU3MiNcpW","executionInfo":{"status":"ok","timestamp":1718323930440,"user_tz":-540,"elapsed":2021,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"b2a0837a-5fef-4b0d-c64b-c0f2c26949e8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### <font color='crimson'>[実践2] 決定木の評価(5mins)</font>\n","\n","決定木のモデルをロジスティックス回帰と同じように、テストデータを用いて評価してみてください。"],"metadata":{"id":"1MBHODC4CxoD"}},{"cell_type":"code","source":["# 3. モデル予測\n","print('*test data*')\n","pred = dtree.predict(X_test) # 変換必要なし\n","my_evaluation(y_test, pred)"],"metadata":{"id":"nO7CZ2eOC_6M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718324784340,"user_tz":-540,"elapsed":285,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"e1be0c5c-0b2a-44cc-b91b-c43f6e4f9d2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["*test data*\n","混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n"]}]},{"cell_type":"markdown","source":["<font color='crimson'>**下記の理論に関しては興味に応じて自身で勉強してください。**</font>"],"metadata":{"id":"v8euexvEBlPE"}},{"cell_type":"markdown","source":["　まず決定木の見方として、上から下まで順に分岐されています。まず一番上のノードに着目します。\n","\n","- 一番上のノードは**根ノード (Root Node)**、一番下にある子ノードを持たないノードを**葉ノード(Leaf Node)**、それ以外は**内部ノード(Internal node)**と呼びます。\n","\n","- **親ノード**は矢印の元のノードで、**子ノード**は矢印先のノードを指す相対的な称号です。\n","\n","- $夏<=0.5$は、夏ダミーが$0$だと左に、$1$だと右に分岐させます。\n","\n","- $gini=0.5$は**ジニ不純度(Gini Impurity)**のことで、後で説明します。\n","\n","- $samples = 800$はこのノードに所属するデータの数です。分岐前なので、800個の訓練データが全て入ってます。\n","\n","- $value =[390, 410]$は、ノードに所属するサンプルの中、$完売=0$(完売しない)が$390$個、$完売=1$（完売した）が$410$個入っていることを示しています。\n","\n","　次に、以下の問題を考えます。\n","\n","- １．**ジニ不純度**とは？\n","\n","- ２．なぜ最初の分岐を**夏**の変数で行うのか？\n","\n"],"metadata":{"id":"8UzNowe7PdYC"}},{"cell_type":"markdown","source":["<a name='section gini'></a>\n","<font color='crimson'>ジニ不純度</font>\n","\n","　まず**ジニ不純度**について説明します。完売する($Y=1$)、しない($Y=0$)の二値分類の場合、**ジニ不純度**を次式で定義します。\n","<br><br>\n","$$\n","I_g(t) = 1-(p_1(t)^2+p_2(t)^2) \\tag{3.7}\n","$$\n","<br>\n","　ここで、$t$はt番目のノード、$p_1(t)$はt番目のノードにおける完売しない=($Y=0$)サンプルの割合、$p_2(t)$は完売する($Y=1$)のサンプルの割合であり、二値分類では、$p_2(t)=1-p_1(t)$になります。**ジニ不純度**は、計量経済学において所得の分配の不均衡を表す指標として用いらていて、$p_1(t)=0.5$の場合に$I_g(t)=1-(0.5^2 + 0.5^2)=0.5$となり最も不均衡な状態を表します。$p_1(t)=1$の場合、ジニ不純度$はI_g(t)=1-(1^2 + 0^2)=0$となり、不均衡がない状態を表します。ジニ不純度が低いほど判別が容易になり、高いほどグループ間に差が見られず判別しつらくなります。\n","\n","　ここで、シミュレーションデータを使って最初のノードにおけるジニ不純度$I_g(0)$を計算してみましょう。\n","\n"],"metadata":{"id":"ByJU56NhswFy"}},{"cell_type":"code","source":["# 1. 完売の確率p_2(0)を計算します。\n","p_2_0 = X_train[y_train==1].shape[0] / X_train.shape[0]\n","\n","# 2. p_1(0)を計算します。\n","p_1_0 = 1 - p_2_0\n","\n","# 3. ジニー不純度を計算します。\n","\n","Ig_0 = 1 - (p_1_0 ** 2 + p_2_0 ** 2)\n","\n","print('p1(t)は%.3f, p2(t)は%.3fで、ジニー不純度Ig(0)は%.3fです。' % (p_1_0, p_2_0, Ig_0) )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kw1E3Xo-mTCE","executionInfo":{"status":"ok","timestamp":1688084074175,"user_tz":-540,"elapsed":255,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"b8a5de7d-f305-46b0-c8c1-2d660c9d9d87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["p1(t)は0.488, p2(t)は0.512で、ジニー不純度Ig(0)は0.500です。\n"]}]},{"cell_type":"markdown","source":["　この結果はsklearnで得られた最初の分岐点でのジニ不純度と同じになります。\n","\n","　次に、ノードの決め方を考えます。最初のリーフにおけるジニ不純度は$0.5$でほぼ最高のジニ不純度となり、アイスクリーム完売($Y=1$)の判別は難しくなっています。ここで**夏**という変数に着目し、夏かどうかでデータを分類すれば、完売の予測精度が向上するという仮説を立ててみます。データを$夏(子ノード1)$と$夏ではない(子ノード2)$という二つのグループに分けて、それぞれのジニ不純度を計算します。\n","\n","　ここで、２つ目にあげた疑問の答えがわかります。**分岐毎にすべての変数でジニ不純度を計算し、一番低いジニ不純度を持つ変数を選択してノードとし分岐させます**。"],"metadata":{"id":"Rz155NMHmSME"}},{"cell_type":"code","source":["# 1.まず上のジニ不純度計算を一般化し、関数にします\n","def gini_imp(df, target):\n","  # df: 説明変数(pd.DataFrame)\n","  # target: 目的変数(pd.DataFrame)\n","\n","  p_2 = df[target==1].shape[0] / df.shape[0]\n","  p_1 = 1 - p_2\n","  Ig = 1 - (p_1 ** 2 + p_2 ** 2)\n","  return Ig\n","\n","# 2.分岐後のノードを計算\n","def gini_of_subnode(df, target, var_name, display=True):\n","  # df: 説明変数(pd.DataFrame)\n","  # target: 目的変数(pd.DataFrame)\n","  # var_name: 分岐に使う変数名(string)\n","  # display: 結果を見せるかどうか(bool)\n","\n","  # Xの分割\n","\n","  df1 = df[df[var_name] == 0] #子ノード1 # 夏=0のデータだけ\n","  df2 = df[df[var_name] == 1] #子ノード2 # 夏=1のデータだけ\n","\n","  # Yの分割\n","  target1 = target[df[var_name] == 0] #子ノード1の目的変数\n","  target2 = target[df[var_name] == 1] #子ノード2の目的変数\n","\n","  gini1 = gini_imp(df1, target1)\n","  gini2 = gini_imp(df2, target2)\n","\n","  if display:\n","      print('%sで分岐した場合、子ノード1のジニー不純度は%.3fで、子ノード2のジニー不純度は%.3fです。' % (var_name, gini1, gini2))\n","  return gini1, gini2\n","\n","sub_ginis = gini_of_subnode(X_train, y_train, '夏')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k05HmW8wrkPq","executionInfo":{"status":"ok","timestamp":1688084417581,"user_tz":-540,"elapsed":266,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"2cf2abb2-c75c-47a0-dea7-44514dd87169"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["夏で分岐した場合、子ノード1のジニー不純度は0.436で、子ノード2のジニー不純度は0.410です。\n"]}]},{"cell_type":"markdown","source":["　この結果からみると、**夏**で分岐した場合、$0.500$のジニ不純度が各子ノードで$0.436$および$0.410$まで下がり、条件なしで判別するより判別しやすくなります。このジニ不純度は、上で可視化したグラフの上から二行目のノードのジニ不純度と一致しています。\n","　さらに、総合にこの**夏**によりどのくらいジニー不純度が下がったのかを判断する基準として、**加重ジニ不純度**が以下のように定義されています。\n","<br><br>\n","$$\n","WI_g(親ノード) = W_1 \\times I_g(子ノード1) + W_2 \\times I_g(子ノード2) \\tag{3.8}\n","$$\n","<br>\n","　ここで、$W_1$は**子ノード1に属するサンプル数 / 親ノードに属するサンプル数}**を表していて、各子ノードのジニ不純度をサンプル数で加重平均した値となっています。"],"metadata":{"id":"HJxDlYw9wyoJ"}},{"cell_type":"markdown","source":["### <font color='crimson'>**チャレンジ** - 全変数の加重ジニ不純度の計算</font>\n","　ここで演習問題です。式(3.7)、(3.8)基づいて、上のサンプルコードを修正して、全変数(**夏**, **雨**,**祝日**)の**加重ジニー不純度**を計算し、比較してみてください。\n","\n"],"metadata":{"id":"_xd75_zDzqwj"}},{"cell_type":"code","source":["# 課題コード\n","\n","# 1. まず上のコードをコピーしてきます。\n","# 2. W_1、W_2の計算式を作ります (shapeを使えば簡単にデータ数を獲得できます)\n","# 3. 式(3.8)に基づきgini1, gini2, W_1, W_2をm用いて加重ジニー不純度を計算します。\n","\n","\n","# 1.まず上のジニ不純度計算を一般化し、関数にします\n","def gini_imp(df, target):\n","  # df: 説明変数(pd.DataFrame)\n","  # target: 目的変数(pd.DataFrame)\n","\n","  p_2 = df[target==1].shape[0] / df.shape[0]\n","  p_1 = 1 - p_2\n","  Ig = 1 - (p_1 ** 2 + p_2 ** 2)\n","  return Ig\n","\n","# 2.分岐後のノードを計算\n","def gini_of_subnode(df, target, var_name, display=True):\n","  # df: 説明変数(pd.DataFrame)\n","  # target: 目的変数(pd.DataFrame)\n","  # var_name: 分岐に使う変数名(string)\n","  # display: 結果を見せるかどうか(bool)\n","\n","  # Xの分割\n","\n","  df1 = df[df[var_name] == 0] #子ノード1 # 夏=0のデータだけ\n","  df2 = df[df[var_name] == 1] #子ノード2 # 夏=1のデータだけ\n","\n","  # Yの分割\n","  target1 = target[df[var_name] == 0] #子ノード1の目的変数\n","  target2 = target[df[var_name] == 1] #子ノード2の目的変数\n","\n","  gini1 = gini_imp(df1, target1)\n","  gini2 = gini_imp(df2, target2)\n","\n","  #親ノード\n","  #    df\n","\n","  # 子ノード\n","  # df1, df2\n","\n","  W1 = df1.shape[0] / df.shape[0]\n","  W2 = 1 - W1\n","\n","  WI = W1 * gini1 + W2 * gini2  #(3.8)\n","\n","  if display:\n","      print('%sで分岐した場合、子ノード1のジニー不純度は%.3fで、子ノード2のジニー不純度は%.3fです。' % (var_name, gini1, gini2))\n","      print('加重ジニー不純度は', WI)\n","  return WI\n","\n","sub_ginis = gini_of_subnode(X_train, y_train, '夏')\n","sub_ginis = gini_of_subnode(X_train, y_train, '雨')\n","sub_ginis = gini_of_subnode(X_train, y_train, '祝日')"],"metadata":{"id":"SXJLYPUI0YMx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718325291805,"user_tz":-540,"elapsed":282,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"fd963a86-2fd1-480b-a0a5-0d8f26d49a70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["夏で分岐した場合、子ノード1のジニー不純度は0.436で、子ノード2のジニー不純度は0.410です。\n","加重ジニー不純度は 0.4234118647458983\n","雨で分岐した場合、子ノード1のジニー不純度は0.480で、子ノード2のジニー不純度は0.449です。\n","加重ジニー不純度は 0.4696296296296296\n","祝日で分岐した場合、子ノード1のジニー不純度は0.500で、子ノード2のジニー不純度は0.460です。\n","加重ジニー不純度は 0.49537582903463523\n"]}]},{"cell_type":"markdown","source":["<a name='section_random_forest'></a>\n","##9.2 <font color=\"Crimson\">**集団学習** - ランダムフォレスト (Random Forest)</font>\n","\n","　次に、決定木を用いた集団学習法であるランダムフォレストについて解説します。ランダムフォレストでの判別は次の図のような流れになります。\n","\n","<div align=\"center\">\n","\n","<img src=\"https://drive.google.com/uc?export=view&id=1Q_HgcKnFy77fNpfKr_5CIEVFo6Rx67Hm\" width=\"100%\">\n","\n","**ランダムフォレスト**\n","</div>\n","\n","\n","- 1. 最初に集団学習に使う決定木の数$T$を決めます。この図では$T=100$です。\n","\n","- 2. まず左から、元の訓練データを母集団と見なし、そこから無作為に$M$個(母集団のデータ数$N$よりは少ない）サンプリングし、$T$回繰り返して$T$セット用意します。ここで$T$個のデータセット間ではサンプルは重複してもかまいません。\n","\n","- 3. $T$個のデータセット毎に説明変数を選択します。すべてのデータセットで同じ説明変数を選択すると、相関が高い分類器になってしまうので、集団学習の優位性が薄れる恐れがあります。そのため決定木ごとに無作為に説明変数をサンプリングしていきます。選択すべき説明変数の数に決まりはありませんが、経験上$\\sqrt{全変数の数}$がよくつかわれます。\n","\n","- 4. それぞれの決定木で判別を行い、最終的に$T$個の決定木の多数決で最終判別を行います。\n","\n","　このように、複数のモデルで学習し、総合的に判断する学習法を**集団学習**と呼びます。"],"metadata":{"id":"Va70S7Z3F0km"}},{"cell_type":"markdown","source":[],"metadata":{"id":"MK4LT9tGuDid"}},{"cell_type":"markdown","source":["ランダムフォーレストの使い方は、基本ロジスティクス回帰や決定木と同じです。\n","\n","そこで、今回はsklearnの如何なるモデルも使える関数を作ってみましょう。"],"metadata":{"id":"Xu1WZAQpqRNW"}},{"cell_type":"markdown","source":["###<font color=\"Crimson\">万能関数</font>\n","\n","`sklearn`のいい所の一つとして、基本どんなモデルでも似たようなコードで動くので、モデル選択以外のコードは、同じでもちゃんと動きます。そこで、どのモデルを入れても訓練できる万能関数を作ってみましょう。"],"metadata":{"id":"UK933ffPuGQV"}},{"cell_type":"markdown","source":[],"metadata":{"id":"7IjZPsPAFJ88"}},{"cell_type":"markdown","source":["### <font color='crimson'>[実践3] 万能関数の作成(10mins)</font>\n","\n","データとモデルを入力すると、訓練と評価を自動的に行う万能関数を作成してください。"],"metadata":{"id":"_gehb1W4FKEo"}},{"cell_type":"markdown","source":["一例:\n","\n","入力：\n","\n","```\n","from sklearn.ensemble import RandomForestClassifier # ランダムフォーレスト\n","rf = RandomForestClassifier()\n","\n","my_model(X_train, X_test, y_train, y_test, rf, 'ランダムフォーレスト')\n","```\n","\n","出力：\n","\n","```\n","モデル名:ランダムフォーレスト\n","混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n","```\n","\n"],"metadata":{"id":"_OYJX2RyHH_k"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier # ランダムフォーレスト\n","rf = RandomForestClassifier()\n","\n","rf.fit(X_train,y_train)\n","\n","pred = rf.predict(X_test)\n","my_evaluation(y_test, pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MWSQuoNOsfIh","executionInfo":{"status":"ok","timestamp":1718325639097,"user_tz":-540,"elapsed":810,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"e9be00f0-ab31-4433-ca3f-09ece3db52e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n"]}]},{"cell_type":"code","source":["# 万能関数\n","def my_model(X_train, X_test, y_train, y_test, model, name=''):\n","  # モデル訓練\n","  model.fit(X_train,y_train)\n","  # モデル評価\n","  pred = model.predict(X_test)\n","\n","  print(f'モデル名：{name}')\n","  my_evaluation(y_test, pred)\n","  pass"],"metadata":{"id":"Iy7Yq5DMqcTA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression # ロジスティクス回帰\n","from sklearn import tree                            # 決定木\n","from sklearn.ensemble import RandomForestClassifier # ランダムフォーレスト\n","from sklearn.svm import SVC                         # まだ学んでないサポートベクトルマシーンも\n","\n","logit = LogisticRegression()\n","tr = tree.DecisionTreeClassifier()\n","rf = RandomForestClassifier()\n","svc = SVC()\n","\n","# ここから\n","my_model(X_train, X_test, y_train, y_test, logit, 'Logistic')\n","my_model(X_train, X_test, y_train, y_test, tr, 'Decision Tree')\n","my_model(X_train, X_test, y_train, y_test, rf, 'ランダムフォーレスト')\n","my_model(X_train, X_test, y_train, y_test, svc, 'SVM')"],"metadata":{"id":"-34FmVbEqHDP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718326006990,"user_tz":-540,"elapsed":754,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"44f6f67a-27c3-42f3-d544-9945b52a638e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["モデル名：Logistic\n","混同行列:\n","[[68 30]\n"," [34 68]]\n","正解率: 0.680\n","精度: 0.694\n","再現率: 0.667\n","F1スコア: 0.680\n","モデル名：Decision Tree\n","混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n","モデル名：ランダムフォーレスト\n","混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n","モデル名：SVM\n","混同行列:\n","[[68 30]\n"," [34 68]]\n","正解率: 0.680\n","精度: 0.694\n","再現率: 0.667\n","F1スコア: 0.680\n"]}]},{"cell_type":"markdown","source":["## 9.3 <font color=\"Crimson\">検証データおよび交差検証法</font>"],"metadata":{"id":"K7akZxMeweg9"}},{"cell_type":"markdown","source":["　上記のシミュレーション実験では、決定木およびランダムフォレストを使って分類を行いました。決定木では深度、ランダムフォレストでは木の数をあらかじめ与える必要があります。これらをチューニングパラメータとよびます。機械学習ではチューニングパラメータの決め方が問題となります。訓練データでいくつかのチューニングパラメータの下で訓練を行い、テストデータの予測性能によって最適なチューニングパラメータを設定することも可能ですが、これは間違っています。テストデータは訓練データとは独立である必要があり、チューニングパラメータの設定を含めいかなる形でもモデルの訓練にテストデータを使うことは許されません。\n","\n","　機械学習における標準的方法としては、新たに訓練データから**検証データ**をつくり、検証データでチューニングパラメータを設定する必要があります。最も一般的な方法が、**交差検証法(Cross Validation)**です。\n","\n","<div align=\"center\">\n","\n","<img src=\"https://drive.google.com/uc?export=view&id=1QwzzWo7AQVML1NeUC0vTBQq0iiUHhTIs&\" width=\"100%\">\n","\n","**交差検証法**\n","</div>\n","\n","- 1) 最初に、訓練データを無作為に$N$セット（この例では５セット）に分割します。\n","\n","- 2) 一つのデータセットを**検証データ**とし、残りの四つのデータセットで訓練を行い、**検証データ**でモデル評価を行います。\n","\n","- 3) 2)で選んだデータセットとは別のデータセットを**検証データ**とし、同様に残りの四つのデータセットで訓練を行い、**検証データ**でモデル評価を行います。\n","\n","- 4) これを$N$回繰り返し、どのデータセットも検証データとして評価を行います。\n","\n","- 5) 最後に、すべての検証データにおける評価の平均値をモデルの評価とみなします。\n","\n"],"metadata":{"id":"ksjl2wAqwqa7"}},{"cell_type":"markdown","source":["<a name='section_grid_search'></a>\n","###<font color=\"Crimson\">グリッドサーチ</font>\n","　適切なチューニングパラメーター設定を探すために、いくつかの候補を設定し、候補の中から最適なものをCVで探索します。**グリッドサーチ(Grid Search)**は全候補を「総当たり」で評価し最適な候補を探索する単純な方法です。\n","\n","<div align=\"center\">\n","\n","<img src=\"https://drive.google.com/uc?export=view&id=1QxTs-cbkbrCjj9lr9i9kmrdK6PHRh6Pf&\" width=\"50%\">\n","\n","**グリッドサーチ**\n","</div>\n","\n","　上の図のように、木の深度の候補として10, 20, 30を設定し、総当たりでCV最適な深度を探索するアルゴリズムです。\n","\n","　**scikit-learn**では、これらを一括で実行できる便利な関数**GridSearchCV()**があります。"],"metadata":{"id":"Ap87gaHFrvbp"}},{"cell_type":"markdown","source":["- **Step 1** - チューニングしたいパラメータを定義\n","\n","例:\n","\n","```python\n","params = {'パラメータ名1':[数値1, 数値2], 'パラメータ名2':[数値1, 数値2]}\n","```\n","\n","例えば、ロジスティクス回帰だと、l1、l2正則、と様々なCを試してみたい時には\n","```python\n","params = {'penalty':['l1', 'l2'], 'C':[0.1, 1, 10]}\n","params = {'C':[0.1, 1, 10]}\n","```\n","このように書きます。\n","\n","注意点として、ここに書いたパラメータのすべての組み合わせで計算を行うため（この例だと2*3=6個のモデル）、むやみに多く試すと計算が長くなる恐れがあります。\n","`\n","\n","- **Step 2** - GridSearchCVに当てはめる\n","\n","ここは簡単に、訓練したいモデルと試したいパラメータを以下のように定義します。\n","```python\n","logistics = GridSearchCV(logistic, params) # ロジスティクス回帰の例\n","\n","```\n","\n","- **Step 3** - 最適モデルを選択\n","\n","続いて、モデル訓練は通常と同じく`logistics.fit(X,y)`で行えます。違うポイントとして、`logistics`には上で指定した複数のパターンが全部格納されています。そこで、交差検証でベストなモデルは\n","```python\n","best_model = logistics.best_estimator_ # ロジスティクス回帰の例\n","```\n","\n","で選択できます。ここで最適モデルを選択した後、モデル評価などは通常のプロセスと同じになります。\n","\n"],"metadata":{"id":"_tRcI64bv69d"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","from sklearn.linear_model import LogisticRegression\n","\n","# 1. パラメーター集合\n","params = {'C':[0.001, 0.1, 1, 10]}\n","\n","# 2. モデル定義\n","logistic = LogisticRegression()\n","\n","# 3. CV\n","models = GridSearchCV(logistic, params)\n","\n","# 4. 訓練\n","models.fit(X_train, y_train)\n","\n","# 5. 最適なモデルを選択\n","best_model = models.best_estimator_\n","best_score =models.best_score_\n","print('一番いいモデルのＣは', best_model.C)\n","print('一番いいモデルの正解率は{:.3f}'.format(best_score))\n","\n","# 6. 予測\n","pred = best_model.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8t0N55OZlkaG","executionInfo":{"status":"ok","timestamp":1688083298942,"user_tz":-540,"elapsed":255,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"9249ecb8-820a-4479-aa09-660f4aa8db86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["一番いいモデルのＣは 0.1\n","一番いいモデルの正解率は0.695\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","\n","# 1. パラメーター集合\n","params = {'C':[0.001, 0.1, 1, 10]}\n","params_rf = {'n_estimators':[10, 50, 100], 'max_depth':[None, 5, 10]}\n","\n","# 2. モデル定義\n","#logistic = LogisticRegression()\n","rf = RandomForestClassifier()\n","\n","# 3. CV\n","models = GridSearchCV(rf, params_rf)\n","\n","# 4. 訓練\n","models.fit(X_train, y_train)\n","\n","# 5. 最適なモデルを選択\n","best_model = models.best_estimator_\n","best_score =models.best_score_\n","print('一番いいモデルのn_estimatorsは', best_model.n_estimators)\n","print('一番いいモデルの正解率は{:.3f}'.format(best_score))\n","\n","# 6. 予測\n","pred = best_model.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NUsCBoW2mvfy","executionInfo":{"status":"ok","timestamp":1688083525224,"user_tz":-540,"elapsed":5880,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"e09da598-4c6e-4731-af44-005429d1bd04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["一番いいモデルのn_estimatorsは 10\n","一番いいモデルの正解率は0.702\n"]}]},{"cell_type":"code","source":["# Logistic\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","# チューニングしたいパラメーター\n","params = {'C':[0.01, 0.1, 1, 10]}\n","\n","# 使いたいモデル\n","logistic = LogisticRegression()\n","\n","# CV\n","logistics = GridSearchCV(logistic, params)\n","\n","# 全パターンを計算してくれます\n","logistics.fit(X_train, y_train)\n","\n","# Best model (6 models -> best model)\n","best_model = logistics.best_estimator_\n","\n","# Best score\n","best_score = logistics.best_score_\n","\n","# Pred\n","pred = best_model.predict(X_test)\n","print('一番いいモデルのＣは', best_model.C)\n","print('一番いいモデルの正解率は{:.3f}'.format(best_score))\n","\n","my_evaluation(y_test, pred)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i1E8J92RuwIp","executionInfo":{"status":"ok","timestamp":1688082163983,"user_tz":-540,"elapsed":710,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"500bac43-f67c-4f9c-c72e-c947491d742c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["一番いいモデルのＣは 0.01\n","一番いいモデルの正解率は0.695\n","混同行列:\n","[[73 25]\n"," [36 66]]\n","正解率: 0.695\n","精度: 0.725\n","再現率: 0.647\n","F1スコア: 0.684\n"]}]},{"cell_type":"code","source":["# Decision Tree\n","\n","from sklearn import tree\n","from sklearn.model_selection import GridSearchCV\n","#探したいパラメータを辞書の形で定義します。\n","params = {'max_depth':[ 2, 3, 5, 10, 20]} # <-\n","\n","tr = tree.DecisionTreeClassifier()\n","\n","trees = GridSearchCV(tr, params)\n","trees.fit(X_train, y_train)\n","best_model = trees.best_estimator_\n","print('最適な決定木の深度は%iです。' % best_model.max_depth)\n","# 可視化\n","\n","tree.plot_tree(best_model, feature_names=X_train.columns, fontsize=10, filled=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"ayRHN8ZMFHVV","executionInfo":{"status":"ok","timestamp":1687397307486,"user_tz":-540,"elapsed":1370,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"b4fee18f-d99f-41e3-d784-24c6c48ea458"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["最適な決定木の深度は3です。\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(\"========決定木=========\")\n","\n","pred = best_model.predict(X_test) # ここだけbest_modelに修正\n","my_evaluation(y_test, pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jIHcvpGLFRVG","executionInfo":{"status":"ok","timestamp":1687398588656,"user_tz":-540,"elapsed":435,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"8d079c31-8bcc-4e84-fe66-56685a413037"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["========決定木=========\n","混同行列:\n","[[69 29]\n"," [34 68]]\n","正解率: 0.685\n","精度: 0.701\n","再現率: 0.667\n","F1スコア: 0.683\n"]}]},{"cell_type":"markdown","source":["### **<font color='crimson'>ハイパーパラメータ(Hyper-parameter)</font>**\n","\n","分析に使うモデル毎に、チューニングするハイパーパラメータは異なります。ここではいくつかの典型的例を挙げます。\n","\n","- <font color='crimson'>**ロジスティクス回帰** (LogisticRegressor)</font>\n","\n","**penalty**: 正則項、 'l1', 'l2', None, 'elasticnet'(l1, l2両方)\n","\n","**C**: 正則重み, $\\alpha$の逆数であり、高いほど正則が弱くなる。\n","\n","- <font color='crimson'>**決定木** (DecisionTreeClassifier)</font>\n","\n","**max_depth**: 木の最大深度、デフォルトではNone(指定なし）\n","\n","- <font color='crimson'>**ランダムフォーレスト**(RandomForesClassifier)</font>\n","\n","**max_depth**: 木の最大深度\n","\n","**n_estimators**: 木の数, デフォルトでは100\n","\n","- <font color='crimson'>**サポートベクトルマシーン**(SVC)</font>\n","\n","**C**: 正則重み, $\\alpha$の逆数であり、高いほど正則が弱くなる。\n","\n","**kernel**: 講義で学んだ線形カーネル'linear'以外も、‘poly’, ‘rbf’, ‘sigmoid’, ‘precomputed’などの非線形カーネルも手軽に使えます。デフォルトでは'rbf'。\n","\n","もちろん、各モデルでチューニングできるパラメータはほかにもあるので、需要に応じて調べて使ってみてください。"],"metadata":{"id":"ToIeD5hDZJhl"}},{"cell_type":"markdown","source":["## <font color='crimson'>**[実践4]最適モデル** (残り時間)</font>\n","\n","今回は銀行の倒産データを使い、分析を行ってみましょう。\n","\n","1. 最初はサポートベクトルマシーンを使って簡単な分類器を作ってみてください。\n","\n","1. GridSearchCVを使い、サポートベクトルマシーンでパラメータチューニングを行い、最適なモデルを選んでみてください。\n","\n","1. 交差検証でチューニングされたサポートベクトルマシーンと(1)で作ったサポートベクトルマシーンのf1スコアを比較してみてください。"],"metadata":{"id":"XmPs2yQG6D4p"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/dgod1028/Research/main/data/bank.csv')\n","display(df.head())\n","\n","target='Bankrupt?'\n","X = df.drop(target, axis=1)\n","y = df[target]\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n","\n","# 前処理\n","from sklearn.preprocessing import StandardScaler\n","\n","norm = StandardScaler() # 標準化関数の定義\n","norm.fit(X_train)\n","X_train[X_train.columns] = norm.transform(X_train)\n","X_test[X_test.columns] = norm.transform(X_test)\n","\n","display(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"q7n3OOF6kDK_","executionInfo":{"status":"ok","timestamp":1718930377097,"user_tz":-540,"elapsed":1031,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"02b99a45-1a93-42f6-f4e5-e275c8a2c5d2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["   Bankrupt?   ROA(C) before interest and depreciation before interest  \\\n","0          1                                           0.370594          \n","1          1                                           0.464291          \n","2          1                                           0.426071          \n","3          1                                           0.399844          \n","4          1                                           0.465022          \n","\n","    ROA(A) before interest and % after tax  \\\n","0                                 0.424389   \n","1                                 0.538214   \n","2                                 0.499019   \n","3                                 0.451265   \n","4                                 0.538432   \n","\n","    ROA(B) before interest and depreciation after tax  \\\n","0                                           0.405750    \n","1                                           0.516730    \n","2                                           0.472295    \n","3                                           0.457733    \n","4                                           0.522298    \n","\n","    Operating Gross Margin   Realized Sales Gross Margin  \\\n","0                 0.601457                      0.601457   \n","1                 0.610235                      0.610235   \n","2                 0.601450                      0.601364   \n","3                 0.583541                      0.583541   \n","4                 0.598783                      0.598783   \n","\n","    Operating Profit Rate   Pre-tax net Interest Rate  \\\n","0                0.998969                    0.796887   \n","1                0.998946                    0.797380   \n","2                0.998857                    0.796403   \n","3                0.998700                    0.796967   \n","4                0.998973                    0.797366   \n","\n","    After-tax net Interest Rate   Non-industry income and expenditure/revenue  \\\n","0                      0.808809                                      0.302646   \n","1                      0.809301                                      0.303556   \n","2                      0.808388                                      0.302035   \n","3                      0.808966                                      0.303350   \n","4                      0.809304                                      0.303475   \n","\n","   ...   Net Income to Total Assets   Total assets to GNP price  \\\n","0  ...                     0.716845                    0.009219   \n","1  ...                     0.795297                    0.008323   \n","2  ...                     0.774670                    0.040003   \n","3  ...                     0.739555                    0.003252   \n","4  ...                     0.795016                    0.003878   \n","\n","    No-credit Interval   Gross Profit to Sales  \\\n","0             0.622879                0.601453   \n","1             0.623652                0.610237   \n","2             0.623841                0.601449   \n","3             0.622929                0.583538   \n","4             0.623521                0.598782   \n","\n","    Net Income to Stockholder's Equity   Liability to Equity  \\\n","0                             0.827890              0.290202   \n","1                             0.839969              0.283846   \n","2                             0.836774              0.290189   \n","3                             0.834697              0.281721   \n","4                             0.839973              0.278514   \n","\n","    Degree of Financial Leverage (DFL)  \\\n","0                             0.026601   \n","1                             0.264577   \n","2                             0.026555   \n","3                             0.026697   \n","4                             0.024752   \n","\n","    Interest Coverage Ratio (Interest expense to EBIT)   Net Income Flag  \\\n","0                                           0.564050                   1   \n","1                                           0.570175                   1   \n","2                                           0.563706                   1   \n","3                                           0.564663                   1   \n","4                                           0.575617                   1   \n","\n","    Equity to Liability  \n","0              0.016469  \n","1              0.020794  \n","2              0.016474  \n","3              0.023982  \n","4              0.035490  \n","\n","[5 rows x 96 columns]"],"text/html":["\n","  <div id=\"df-b0174a7f-05b7-4d87-9493-9e0d295c00d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bankrupt?</th>\n","      <th>ROA(C) before interest and depreciation before interest</th>\n","      <th>ROA(A) before interest and % after tax</th>\n","      <th>ROA(B) before interest and depreciation after tax</th>\n","      <th>Operating Gross Margin</th>\n","      <th>Realized Sales Gross Margin</th>\n","      <th>Operating Profit Rate</th>\n","      <th>Pre-tax net Interest Rate</th>\n","      <th>After-tax net Interest Rate</th>\n","      <th>Non-industry income and expenditure/revenue</th>\n","      <th>...</th>\n","      <th>Net Income to Total Assets</th>\n","      <th>Total assets to GNP price</th>\n","      <th>No-credit Interval</th>\n","      <th>Gross Profit to Sales</th>\n","      <th>Net Income to Stockholder's Equity</th>\n","      <th>Liability to Equity</th>\n","      <th>Degree of Financial Leverage (DFL)</th>\n","      <th>Interest Coverage Ratio (Interest expense to EBIT)</th>\n","      <th>Net Income Flag</th>\n","      <th>Equity to Liability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.370594</td>\n","      <td>0.424389</td>\n","      <td>0.405750</td>\n","      <td>0.601457</td>\n","      <td>0.601457</td>\n","      <td>0.998969</td>\n","      <td>0.796887</td>\n","      <td>0.808809</td>\n","      <td>0.302646</td>\n","      <td>...</td>\n","      <td>0.716845</td>\n","      <td>0.009219</td>\n","      <td>0.622879</td>\n","      <td>0.601453</td>\n","      <td>0.827890</td>\n","      <td>0.290202</td>\n","      <td>0.026601</td>\n","      <td>0.564050</td>\n","      <td>1</td>\n","      <td>0.016469</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.464291</td>\n","      <td>0.538214</td>\n","      <td>0.516730</td>\n","      <td>0.610235</td>\n","      <td>0.610235</td>\n","      <td>0.998946</td>\n","      <td>0.797380</td>\n","      <td>0.809301</td>\n","      <td>0.303556</td>\n","      <td>...</td>\n","      <td>0.795297</td>\n","      <td>0.008323</td>\n","      <td>0.623652</td>\n","      <td>0.610237</td>\n","      <td>0.839969</td>\n","      <td>0.283846</td>\n","      <td>0.264577</td>\n","      <td>0.570175</td>\n","      <td>1</td>\n","      <td>0.020794</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.426071</td>\n","      <td>0.499019</td>\n","      <td>0.472295</td>\n","      <td>0.601450</td>\n","      <td>0.601364</td>\n","      <td>0.998857</td>\n","      <td>0.796403</td>\n","      <td>0.808388</td>\n","      <td>0.302035</td>\n","      <td>...</td>\n","      <td>0.774670</td>\n","      <td>0.040003</td>\n","      <td>0.623841</td>\n","      <td>0.601449</td>\n","      <td>0.836774</td>\n","      <td>0.290189</td>\n","      <td>0.026555</td>\n","      <td>0.563706</td>\n","      <td>1</td>\n","      <td>0.016474</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.399844</td>\n","      <td>0.451265</td>\n","      <td>0.457733</td>\n","      <td>0.583541</td>\n","      <td>0.583541</td>\n","      <td>0.998700</td>\n","      <td>0.796967</td>\n","      <td>0.808966</td>\n","      <td>0.303350</td>\n","      <td>...</td>\n","      <td>0.739555</td>\n","      <td>0.003252</td>\n","      <td>0.622929</td>\n","      <td>0.583538</td>\n","      <td>0.834697</td>\n","      <td>0.281721</td>\n","      <td>0.026697</td>\n","      <td>0.564663</td>\n","      <td>1</td>\n","      <td>0.023982</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.465022</td>\n","      <td>0.538432</td>\n","      <td>0.522298</td>\n","      <td>0.598783</td>\n","      <td>0.598783</td>\n","      <td>0.998973</td>\n","      <td>0.797366</td>\n","      <td>0.809304</td>\n","      <td>0.303475</td>\n","      <td>...</td>\n","      <td>0.795016</td>\n","      <td>0.003878</td>\n","      <td>0.623521</td>\n","      <td>0.598782</td>\n","      <td>0.839973</td>\n","      <td>0.278514</td>\n","      <td>0.024752</td>\n","      <td>0.575617</td>\n","      <td>1</td>\n","      <td>0.035490</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 96 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0174a7f-05b7-4d87-9493-9e0d295c00d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b0174a7f-05b7-4d87-9493-9e0d295c00d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b0174a7f-05b7-4d87-9493-9e0d295c00d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-07d76b1c-5d74-4d64-86ad-35e326f4a14b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-07d76b1c-5d74-4d64-86ad-35e326f4a14b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-07d76b1c-5d74-4d64-86ad-35e326f4a14b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       ROA(C) before interest and depreciation before interest  \\\n","1524                                          -0.374733          \n","2819                                          -0.159511          \n","1957                                           0.493520          \n","5020                                           1.140005          \n","4443                                           0.045891          \n","...                                                 ...          \n","4931                                          -0.524489          \n","3264                                           2.117097          \n","1653                                           0.693194          \n","2607                                           0.011521          \n","2732                                           1.461610          \n","\n","       ROA(A) before interest and % after tax  \\\n","1524                                -0.148488   \n","2819                                 0.060331   \n","1957                                 0.424708   \n","5020                                 0.893072   \n","4443                                 0.239561   \n","...                                       ...   \n","4931                                -0.478203   \n","3264                                 2.130770   \n","1653                                 0.794158   \n","2607                                 0.383282   \n","2732                                 1.237159   \n","\n","       ROA(B) before interest and depreciation after tax  \\\n","1524                                          -0.262770    \n","2819                                          -0.159785    \n","1957                                           0.453681    \n","5020                                           0.840760    \n","4443                                           0.091461    \n","...                                                 ...    \n","4931                                          -0.504250    \n","3264                                           2.298520    \n","1653                                           0.712918    \n","2607                                           0.006232    \n","2732                                           1.297087    \n","\n","       Operating Gross Margin   Realized Sales Gross Margin  \\\n","1524                -0.526506                     -0.574363   \n","2819                -0.454334                     -0.453728   \n","1957                -0.430142                     -0.429520   \n","5020                -0.097504                     -0.096664   \n","4443                 0.378672                      0.335039   \n","...                       ...                           ...   \n","4931                -0.228543                     -0.227789   \n","3264                 0.861702                      0.863170   \n","1653                -0.279346                     -0.334707   \n","2607                 0.040389                      0.041319   \n","2732                -0.204755                     -0.203985   \n","\n","       Operating Profit Rate   Pre-tax net Interest Rate  \\\n","1524                0.007511                    0.018093   \n","2819                0.022877                    0.025127   \n","1957                0.022202                    0.022856   \n","5020                0.018945                    0.091182   \n","4443                0.027835                    0.024444   \n","...                      ...                         ...   \n","4931                0.020232                    0.014485   \n","3264                0.037830                    0.039897   \n","1653                0.024180                    0.036096   \n","2607                0.030131                    0.046748   \n","2732                0.021265                    0.029630   \n","\n","       After-tax net Interest Rate  \\\n","1524                      0.021392   \n","2819                      0.024127   \n","1957                      0.022790   \n","5020                      0.067201   \n","4443                      0.024050   \n","...                            ...   \n","4931                      0.016463   \n","3264                      0.037648   \n","1653                      0.033593   \n","2607                      0.041034   \n","2732                      0.027334   \n","\n","       Non-industry income and expenditure/revenue  \\\n","1524                                      0.018143   \n","2819                                     -0.005200   \n","1957                                     -0.008130   \n","5020                                      0.137611   \n","4443                                     -0.018666   \n","...                                            ...   \n","4931                                     -0.020199   \n","3264                                     -0.011952   \n","1653                                      0.013719   \n","2607                                      0.020685   \n","2732                                      0.007820   \n","\n","       Continuous interest rate (after tax)  ...   Net Income to Total Assets  \\\n","1524                               0.020198  ...                    -0.203089   \n","2819                               0.022734  ...                     0.158392   \n","1957                               0.021743  ...                     0.439678   \n","5020                               0.072999  ...                     0.884530   \n","4443                               0.023121  ...                     0.247336   \n","...                                     ...  ...                          ...   \n","4931                               0.014035  ...                    -0.382262   \n","3264                               0.038904  ...                     1.645403   \n","1653                               0.034148  ...                     0.769157   \n","2607                               0.033207  ...                     0.454728   \n","2732                               0.026945  ...                     1.147374   \n","\n","       Total assets to GNP price   No-credit Interval   Gross Profit to Sales  \\\n","1524                   -0.052316             0.014646               -0.526460   \n","2819                   -0.052316            -0.038991               -0.454439   \n","1957                   -0.052316             0.008855               -0.430140   \n","5020                   -0.052316             0.061383               -0.097435   \n","4443                   -0.052316            -0.003770                0.378616   \n","...                          ...                  ...                     ...   \n","4931                   -0.052316             0.007513               -0.228579   \n","3264                   -0.052316             0.011795                0.861668   \n","1653                   -0.052316             0.039163               -0.279481   \n","2607                   -0.052316             1.156320                0.040259   \n","2732                   -0.052316            -0.003684               -0.204956   \n","\n","       Net Income to Stockholder's Equity   Liability to Equity  \\\n","1524                            -0.003947             -0.003143   \n","2819                             0.077145             -0.037096   \n","1957                             0.121122             -0.141106   \n","5020                             0.148973             -0.341125   \n","4443                             0.095770             -0.047986   \n","...                                   ...                   ...   \n","4931                            -0.044795             -0.061839   \n","3264                             0.323527             -0.217610   \n","1653                             0.168919             -0.206533   \n","2607                             0.076512             -0.386780   \n","2732                             0.226112             -0.238558   \n","\n","       Degree of Financial Leverage (DFL)  \\\n","1524                             0.762964   \n","2819                            -0.042601   \n","1957                            -0.040186   \n","5020                            -0.044839   \n","4443                            -0.036785   \n","...                                   ...   \n","4931                            -0.076572   \n","3264                            -0.044097   \n","1653                            -0.044394   \n","2607                            -0.044322   \n","2732                            -0.043842   \n","\n","       Interest Coverage Ratio (Interest expense to EBIT)   Net Income Flag  \\\n","1524                                           0.382472                 0.0   \n","2819                                          -0.002641                 0.0   \n","1957                                           0.011952                 0.0   \n","5020                                          -0.017136                 0.0   \n","4443                                           0.030846                 0.0   \n","...                                                 ...                 ...   \n","4931                                          -0.436752                 0.0   \n","3264                                          -0.012218                 0.0   \n","1653                                          -0.014173                 0.0   \n","2607                                          -0.013700                 0.0   \n","2732                                          -0.010554                 0.0   \n","\n","       Equity to Liability  \n","1524             -0.400179  \n","2819             -0.370437  \n","1957             -0.235023  \n","5020              0.971193  \n","4443             -0.359761  \n","...                    ...  \n","4931             -0.345258  \n","3264             -0.048653  \n","1653             -0.083725  \n","2607              3.024064  \n","2732              0.029073  \n","\n","[5455 rows x 95 columns]"],"text/html":["\n","  <div id=\"df-c69a8b33-2c83-42c3-ad60-6671a5ce4b8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ROA(C) before interest and depreciation before interest</th>\n","      <th>ROA(A) before interest and % after tax</th>\n","      <th>ROA(B) before interest and depreciation after tax</th>\n","      <th>Operating Gross Margin</th>\n","      <th>Realized Sales Gross Margin</th>\n","      <th>Operating Profit Rate</th>\n","      <th>Pre-tax net Interest Rate</th>\n","      <th>After-tax net Interest Rate</th>\n","      <th>Non-industry income and expenditure/revenue</th>\n","      <th>Continuous interest rate (after tax)</th>\n","      <th>...</th>\n","      <th>Net Income to Total Assets</th>\n","      <th>Total assets to GNP price</th>\n","      <th>No-credit Interval</th>\n","      <th>Gross Profit to Sales</th>\n","      <th>Net Income to Stockholder's Equity</th>\n","      <th>Liability to Equity</th>\n","      <th>Degree of Financial Leverage (DFL)</th>\n","      <th>Interest Coverage Ratio (Interest expense to EBIT)</th>\n","      <th>Net Income Flag</th>\n","      <th>Equity to Liability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1524</th>\n","      <td>-0.374733</td>\n","      <td>-0.148488</td>\n","      <td>-0.262770</td>\n","      <td>-0.526506</td>\n","      <td>-0.574363</td>\n","      <td>0.007511</td>\n","      <td>0.018093</td>\n","      <td>0.021392</td>\n","      <td>0.018143</td>\n","      <td>0.020198</td>\n","      <td>...</td>\n","      <td>-0.203089</td>\n","      <td>-0.052316</td>\n","      <td>0.014646</td>\n","      <td>-0.526460</td>\n","      <td>-0.003947</td>\n","      <td>-0.003143</td>\n","      <td>0.762964</td>\n","      <td>0.382472</td>\n","      <td>0.0</td>\n","      <td>-0.400179</td>\n","    </tr>\n","    <tr>\n","      <th>2819</th>\n","      <td>-0.159511</td>\n","      <td>0.060331</td>\n","      <td>-0.159785</td>\n","      <td>-0.454334</td>\n","      <td>-0.453728</td>\n","      <td>0.022877</td>\n","      <td>0.025127</td>\n","      <td>0.024127</td>\n","      <td>-0.005200</td>\n","      <td>0.022734</td>\n","      <td>...</td>\n","      <td>0.158392</td>\n","      <td>-0.052316</td>\n","      <td>-0.038991</td>\n","      <td>-0.454439</td>\n","      <td>0.077145</td>\n","      <td>-0.037096</td>\n","      <td>-0.042601</td>\n","      <td>-0.002641</td>\n","      <td>0.0</td>\n","      <td>-0.370437</td>\n","    </tr>\n","    <tr>\n","      <th>1957</th>\n","      <td>0.493520</td>\n","      <td>0.424708</td>\n","      <td>0.453681</td>\n","      <td>-0.430142</td>\n","      <td>-0.429520</td>\n","      <td>0.022202</td>\n","      <td>0.022856</td>\n","      <td>0.022790</td>\n","      <td>-0.008130</td>\n","      <td>0.021743</td>\n","      <td>...</td>\n","      <td>0.439678</td>\n","      <td>-0.052316</td>\n","      <td>0.008855</td>\n","      <td>-0.430140</td>\n","      <td>0.121122</td>\n","      <td>-0.141106</td>\n","      <td>-0.040186</td>\n","      <td>0.011952</td>\n","      <td>0.0</td>\n","      <td>-0.235023</td>\n","    </tr>\n","    <tr>\n","      <th>5020</th>\n","      <td>1.140005</td>\n","      <td>0.893072</td>\n","      <td>0.840760</td>\n","      <td>-0.097504</td>\n","      <td>-0.096664</td>\n","      <td>0.018945</td>\n","      <td>0.091182</td>\n","      <td>0.067201</td>\n","      <td>0.137611</td>\n","      <td>0.072999</td>\n","      <td>...</td>\n","      <td>0.884530</td>\n","      <td>-0.052316</td>\n","      <td>0.061383</td>\n","      <td>-0.097435</td>\n","      <td>0.148973</td>\n","      <td>-0.341125</td>\n","      <td>-0.044839</td>\n","      <td>-0.017136</td>\n","      <td>0.0</td>\n","      <td>0.971193</td>\n","    </tr>\n","    <tr>\n","      <th>4443</th>\n","      <td>0.045891</td>\n","      <td>0.239561</td>\n","      <td>0.091461</td>\n","      <td>0.378672</td>\n","      <td>0.335039</td>\n","      <td>0.027835</td>\n","      <td>0.024444</td>\n","      <td>0.024050</td>\n","      <td>-0.018666</td>\n","      <td>0.023121</td>\n","      <td>...</td>\n","      <td>0.247336</td>\n","      <td>-0.052316</td>\n","      <td>-0.003770</td>\n","      <td>0.378616</td>\n","      <td>0.095770</td>\n","      <td>-0.047986</td>\n","      <td>-0.036785</td>\n","      <td>0.030846</td>\n","      <td>0.0</td>\n","      <td>-0.359761</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4931</th>\n","      <td>-0.524489</td>\n","      <td>-0.478203</td>\n","      <td>-0.504250</td>\n","      <td>-0.228543</td>\n","      <td>-0.227789</td>\n","      <td>0.020232</td>\n","      <td>0.014485</td>\n","      <td>0.016463</td>\n","      <td>-0.020199</td>\n","      <td>0.014035</td>\n","      <td>...</td>\n","      <td>-0.382262</td>\n","      <td>-0.052316</td>\n","      <td>0.007513</td>\n","      <td>-0.228579</td>\n","      <td>-0.044795</td>\n","      <td>-0.061839</td>\n","      <td>-0.076572</td>\n","      <td>-0.436752</td>\n","      <td>0.0</td>\n","      <td>-0.345258</td>\n","    </tr>\n","    <tr>\n","      <th>3264</th>\n","      <td>2.117097</td>\n","      <td>2.130770</td>\n","      <td>2.298520</td>\n","      <td>0.861702</td>\n","      <td>0.863170</td>\n","      <td>0.037830</td>\n","      <td>0.039897</td>\n","      <td>0.037648</td>\n","      <td>-0.011952</td>\n","      <td>0.038904</td>\n","      <td>...</td>\n","      <td>1.645403</td>\n","      <td>-0.052316</td>\n","      <td>0.011795</td>\n","      <td>0.861668</td>\n","      <td>0.323527</td>\n","      <td>-0.217610</td>\n","      <td>-0.044097</td>\n","      <td>-0.012218</td>\n","      <td>0.0</td>\n","      <td>-0.048653</td>\n","    </tr>\n","    <tr>\n","      <th>1653</th>\n","      <td>0.693194</td>\n","      <td>0.794158</td>\n","      <td>0.712918</td>\n","      <td>-0.279346</td>\n","      <td>-0.334707</td>\n","      <td>0.024180</td>\n","      <td>0.036096</td>\n","      <td>0.033593</td>\n","      <td>0.013719</td>\n","      <td>0.034148</td>\n","      <td>...</td>\n","      <td>0.769157</td>\n","      <td>-0.052316</td>\n","      <td>0.039163</td>\n","      <td>-0.279481</td>\n","      <td>0.168919</td>\n","      <td>-0.206533</td>\n","      <td>-0.044394</td>\n","      <td>-0.014173</td>\n","      <td>0.0</td>\n","      <td>-0.083725</td>\n","    </tr>\n","    <tr>\n","      <th>2607</th>\n","      <td>0.011521</td>\n","      <td>0.383282</td>\n","      <td>0.006232</td>\n","      <td>0.040389</td>\n","      <td>0.041319</td>\n","      <td>0.030131</td>\n","      <td>0.046748</td>\n","      <td>0.041034</td>\n","      <td>0.020685</td>\n","      <td>0.033207</td>\n","      <td>...</td>\n","      <td>0.454728</td>\n","      <td>-0.052316</td>\n","      <td>1.156320</td>\n","      <td>0.040259</td>\n","      <td>0.076512</td>\n","      <td>-0.386780</td>\n","      <td>-0.044322</td>\n","      <td>-0.013700</td>\n","      <td>0.0</td>\n","      <td>3.024064</td>\n","    </tr>\n","    <tr>\n","      <th>2732</th>\n","      <td>1.461610</td>\n","      <td>1.237159</td>\n","      <td>1.297087</td>\n","      <td>-0.204755</td>\n","      <td>-0.203985</td>\n","      <td>0.021265</td>\n","      <td>0.029630</td>\n","      <td>0.027334</td>\n","      <td>0.007820</td>\n","      <td>0.026945</td>\n","      <td>...</td>\n","      <td>1.147374</td>\n","      <td>-0.052316</td>\n","      <td>-0.003684</td>\n","      <td>-0.204956</td>\n","      <td>0.226112</td>\n","      <td>-0.238558</td>\n","      <td>-0.043842</td>\n","      <td>-0.010554</td>\n","      <td>0.0</td>\n","      <td>0.029073</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5455 rows × 95 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c69a8b33-2c83-42c3-ad60-6671a5ce4b8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c69a8b33-2c83-42c3-ad60-6671a5ce4b8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c69a8b33-2c83-42c3-ad60-6671a5ce4b8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-11f3dc7c-0a54-49df-8ed6-0a02eb242717\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11f3dc7c-0a54-49df-8ed6-0a02eb242717')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-11f3dc7c-0a54-49df-8ed6-0a02eb242717 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2367ed28-689f-405c-ad4b-ab8a64c16e17\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2367ed28-689f-405c-ad4b-ab8a64c16e17 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.svm import SVC\n","from sklearn.model_selection import GridSearchCV\n","\n","print(\"#1\")\n","svc = SVC()\n","my_model(X_train, X_test, y_train, y_test, svc, 'SVM')\n","\n","print(\"#2\")\n","# 1. パラメーター集合\n","params_ = {'kernel':['poly','rbf','sigmoid','linear'],'C':[0.01, 0.1, 1, 10]}\n","\n","# 2. モデル定義\n","svc = SVC()\n","\n","# 3. CV(基礎モデルとパラメータの集合)\n","models = GridSearchCV(svc, params_)\n","\n","# 4. 訓練\n","models.fit(X_train, y_train)\n","\n","# 5. 最適なモデルを選択\n","best_model = models.best_estimator_\n","best_score =models.best_score_\n","\n","# 6. 予測,評価\n","pred = best_model.predict(X_test)\n","print('bast kernel:',best_model.kernel)\n","print('best C:', best_model.C)\n","my_evaluation(y_test, pred)\n","#第1種の過誤を小さくするためにデータ数（データの多いほうを捨てる）を減らしorデータの少ないほうを捨てたときのペナルティを大きくし、評価する\n","#→精度と引き換えに再現率が上がる。\n","#LSTMとは、先述したRNNを進化させたもの。\n","#RNNにはデータの関連性が長期的なものなのか、短期的なものなのかを区別できないというデメリットがあり、LSTMはそのデメリットを克服したアルゴリズムです。\n","#具体的には、「隠れ層」の構造を発展させ重要なデータを残し不要なデータを忘れさせることで、先述したデメリットを解消しました。\n","#また、LSTMには学習状況を保存できる「メモリセル」というメモリや、「入力ゲート層」と「出力ゲート層」の間に「**忘却**ゲート層」を加えることで、長期的な学習も可能にしました。\n","#RNNと同様にLSTMも、自然言語処理や時系列データの予測といった分野で活躍しています。"],"metadata":{"id":"bUOMlmSJ02WN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718928031536,"user_tz":-540,"elapsed":104993,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"5fc0a766-e73e-4a21-e8a6-9866a386df27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["#1\n","モデル名：SVM\n","混同行列:\n","[[1318    0]\n"," [  45    1]]\n","正解率: 0.967\n","精度: 1.000\n","再現率: 0.022\n","F1スコア: 0.043\n","#2\n","bast kernel: poly\n","best C: 0.01\n","混同行列:\n","[[1315    3]\n"," [  43    3]]\n","正解率: 0.966\n","精度: 0.500\n","再現率: 0.065\n","F1スコア: 0.115\n"]}]},{"cell_type":"code","source":["print('bast kernel:',best_model.kernel)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_FL9VHTE1ncv","executionInfo":{"status":"ok","timestamp":1718928058892,"user_tz":-540,"elapsed":423,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"0ba1b84a-c149-4449-d464-d9e88c252827"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["bast kernel: poly\n"]}]},{"cell_type":"code","source":["print('best C:', best_model.C)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uqLvpJuR11it","executionInfo":{"status":"ok","timestamp":1718928060720,"user_tz":-540,"elapsed":4,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"76ba0d7c-4170-43c4-f498-dae7c1655025"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["best C: 0.01\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","def my_best_model(X_train, X_test, y_train, y_test, model,params, name=''):\n","  # モデル訓練\n","  # 基礎モデル、パラメーター集合\n","  models = GridSearchCV(model, params)\n","  models.fit(X_train, y_train)\n","\n","  best_model = models.best_estimator_\n","  pred = best_model.predict(X_test)# 予測\n","  # モデル評価\n","  print(f'モデル名:{name}')\n","  my_evaluation(y_test, pred)"],"metadata":{"id":"wdRtl8yJONtb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def my_model(X_train, X_test, y_train, y_test, model, name=''):\n","  # モデル訓練\n","  model.fit(X_train, y_train)\n","\n","  pred = model.predict(X_test)# 予測\n","  # モデル評価\n","  print(f'モデル名:{name}')\n","  my_evaluation(y_test, pred)\n","  return model\n","\n","from sklearn import tree\n","model = tree.DecisionTreeClassifier()\n","\n","model = my_model(X_train, X_test, y_train, y_test, model, 'tree')\n","model.feature_importances_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"--elPX0_O2bQ","executionInfo":{"status":"ok","timestamp":1718930383556,"user_tz":-540,"elapsed":984,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"5afe2034-6d2c-4f46-a785-49320b9221b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["モデル名:tree\n","混同行列:\n","[[1280   38]\n"," [  34   12]]\n","正解率: 0.947\n","精度: 0.240\n","再現率: 0.261\n","F1スコア: 0.250\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0.02376746, 0.01040887, 0.01757701, 0.00341989, 0.        ,\n","       0.        , 0.01266092, 0.00474919, 0.04284281, 0.        ,\n","       0.        , 0.0167107 , 0.00395766, 0.        , 0.        ,\n","       0.01883458, 0.00395766, 0.        , 0.12719871, 0.00771743,\n","       0.        , 0.00568586, 0.00395766, 0.00761144, 0.        ,\n","       0.        , 0.00527688, 0.01157897, 0.03347241, 0.        ,\n","       0.03794865, 0.01101249, 0.        , 0.        , 0.05354867,\n","       0.        , 0.00544098, 0.00395766, 0.        , 0.05592357,\n","       0.03288651, 0.00395766, 0.        , 0.        , 0.01794138,\n","       0.        , 0.        , 0.00890473, 0.01493084, 0.        ,\n","       0.        , 0.01079587, 0.        , 0.0104713 , 0.01230054,\n","       0.02591454, 0.0417859 , 0.        , 0.        , 0.        ,\n","       0.00282823, 0.01961534, 0.        , 0.00474919, 0.01429703,\n","       0.        , 0.        , 0.00296824, 0.00995497, 0.00593482,\n","       0.00499705, 0.        , 0.00558728, 0.        , 0.02128469,\n","       0.        , 0.03046075, 0.00901604, 0.02470267, 0.00732911,\n","       0.        , 0.00969626, 0.00259721, 0.00556809, 0.        ,\n","       0.02159387, 0.        , 0.02986826, 0.        , 0.0307502 ,\n","       0.        , 0.01216728, 0.        , 0.        , 0.01492602])"]},"metadata":{},"execution_count":16}]}]}