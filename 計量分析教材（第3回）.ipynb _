{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1DYCldE54DZ4WWFOxVKsufC2po1-ew46d","timestamp":1713925615380},{"file_id":"1NO7rJlDhaseKqsED896g_T1BM_Y1-_zr","timestamp":1713322082702}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Ver 1.0\n","\n","バージョンについて：配布時点で1.0。修正がある場合バージョンも修正します。自分のバックアップと比較の際に参考にしてください。"],"metadata":{"id":"sorFGO_ISkrX"}},{"cell_type":"markdown","source":["#3. <font color='crimson'>python基礎（３）</font>\n","\n","**今日のポイント**：\n","\n","- 復習\n","\n","- 乱数\n","\n","- 練習問題\n","\n","\n"],"metadata":{"id":"I7eyvF2v1ICU"}},{"cell_type":"markdown","source":["##3.0 <font color='crimson'>第二回の課題の解説</font>\n","\n","まず前回の課題を解説します。\n","\n","- [回答リンク](https://colab.research.google.com/drive/1BFHgUqb3Qk0i7A5MIsFu57sSZAIvXBc-?usp=sharing)"],"metadata":{"id":"OAqk_dYWhlvS"}},{"cell_type":"markdown","source":["##3.1 <font color='crimson'>numpyで乱数</font>\n","\n","多くのプログラムは一回限りではなく、複数回使われることが多いです。**関数**はプログラミングの可読性を上げるだけでなく、同じ処理を行う際に、複数回コードをかけずに済める便利なツールです。"],"metadata":{"id":"WSmcSIdED0mL"}},{"cell_type":"markdown","source":["### <font color='crimson'>様々な分布からの乱数</font>"],"metadata":{"id":"eChjK7mulKeB"}},{"cell_type":"markdown","source":["- 正規分布 - $N(\\mu,\\sigma)$"],"metadata":{"id":"ckV_DMMKV98r"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","rand = np.random.normal(0,1, 100000) # 平均, 分散, 乱数の数\n","\n","plt.hist(rand,50)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"r4AAHWj6VBU-","executionInfo":{"status":"ok","timestamp":1682641409546,"user_tz":-540,"elapsed":470,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"271ee082-ea24-46a8-9f2b-6c4c96456360"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","rand = np.random.normal(0,1, 100000000) # 平均, 分散, 乱数の数\n","\n","plt.hist(rand,50)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":445},"id":"0xnSbsQG7zXv","executionInfo":{"status":"ok","timestamp":1713925980297,"user_tz":-540,"elapsed":9281,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"774ee0d4-ebd9-4baa-eb5f-c3a1b89d377b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["- 一様分布 - $U(a, b)$\n","\n","$$\n","P(x=X) = \\frac{1}{b-a}, a\\le x \\le b\n","$$\n","\n","離散、もしくは連続型の確率分布で、すべての事象が起こる確率が全く同じである分布になります。（例：サイコロを振る時）"],"metadata":{"id":"jlcw5K7cWu31"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","rand = np.random.uniform(-1,1, 10000) # 下限、上限, 乱数の数\n","plt.hist(rand,50)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"KEu8bVkiWAlT","executionInfo":{"status":"ok","timestamp":1682344871144,"user_tz":-540,"elapsed":723,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"414c7206-7e2a-4add-fba9-75a35e3b2d63"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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fGMmTJhQ72XGgwcPNrt27TKff/656d27t98uM75SP06cOGHi4+PNrl27PB535MgRExAQYD744IM623z33XfNq6++ar799ltz5MgR89JLL5l27dqZ+fPnN3k99fG2xoKCArNo0SKzZ88eU1hYaDZu3Gh69Ohhbr/9ducxtZcZjxkzxuzbt8/k5uaaTp06+e0yY2/qKy0tNYmJiSYhIcEUFBR4XNZYXV1tjPHvGK5du9a4XC6zevVqc+DAATNz5kwTHh7uXDF17733mnnz5jntv/jiCxMcHGyWLVtmDh48aBYsWFDvZcZX2yebi7f1LVmyxISEhJi3337bY6xq34PKy8vNww8/bPLy8kxhYaH5+OOPza233mp69+7drGG5sfUtXLjQfPjhh+bo0aMmPz/fTJ482bRt29bs37/faWPT+BnjfY21Ro4cae6+++46y20bw/LycuezTpJ57rnnzN69e80PP/xgjDFm3rx55t5773Xa115m/Mgjj5iDBw+a7Ozsei8zvtJr5gvXXUBJT083kurcPv30U6eN/t/3RdSqqakxTzzxhImOjjYul8uMHj3aHD582GO7Z86cMVOmTDEdOnQwbrfb3HfffR6hp7lcrR+FhYV16jXGmMzMTBMXF2cuXbpUZ5sffPCBGTRokOnQoYNp3769GThwoFmxYkW9bZuDtzUeO3bM3H777SYiIsK4XC7Tq1cv88gjj3h8D4oxxnz//fcmLS3NhIaGmsjISPPQQw95XKbbXLyt79NPP633b1qSKSwsNMb4fwyXL19uunTpYkJCQsywYcPMzp07nXWjRo0y6enpHu3feustc/PNN5uQkBBzyy23mPfff99jfUP2yebkTX1du3atd6wWLFhgjDHm3LlzZsyYMaZTp06mTZs2pmvXrmbGjBk+feP3ljf1PfDAA07b6OhoM3bsWPPVV195bM+28TPG+7/RQ4cOGUnmo48+qrMt28bwcu8RtTWlp6ebUaNG1XnMoEGDTEhIiOnRo4fHZ2KtK71mvhBgjB+uFQUAALgCvgcFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOv8L6nwIHWweo1dAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"markdown","source":["- ランダムに整数をサンプリングする関数"],"metadata":{"id":"BWoBZx8gXyXY"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","rand = np.random.randint(-1,5, 10000) # 開始、終了-1, 乱数の数　（int...整数）\n","print(rand[:50])\n","plt.hist(rand,50)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"VgueWGSgVDwa","executionInfo":{"status":"ok","timestamp":1682344880179,"user_tz":-540,"elapsed":525,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"5ff6fe83-b4e9-45d5-d516-0bcd2f9be031"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 0  1  1  3  4  1  0  0  4  3  2  1  0  3  1  0  3  3  3  4  3  0 -1  3\n","  0  0  4  0  1  4  4 -1  2  4  4  4  3  2 -1  1 -1  2 -1  0  2  1  0  4\n"," -1  1]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["- ベルヌーイ試行\n","\n","コイン投げ実験での「表か裏か」、「買ったか買ってないか」などの二種類の結果のみしか得られない実験のことをベルヌーイ試行と呼びます。"],"metadata":{"id":"7bdMiOO_PNws"}},{"cell_type":"code","source":["# ベルヌーイ分布\n","import numpy as np\n","np.random.binomial(1,0.3, 1) # 実験回数、確率、サンプル数"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gqhtxN0jh0VA","executionInfo":{"status":"ok","timestamp":1682641620369,"user_tz":-540,"elapsed":261,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"00f33b97-3a52-403c-cc4a-597a90f67cb6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["この結果は、実行するたびに変わる可能性があり、表になる確率が0.3のコインを一回投げて、表になっているかどうかの実験です。$[0]$だと裏、$[1]$だと表と解釈します。\n","\n","この実験を複数回行うとすると、下記のようになります。"],"metadata":{"id":"ZMIy0F9LObjk"}},{"cell_type":"code","source":["## 複数回のサンプルを作る\n","import numpy as np\n","np.random.binomial(1,0.3, 100) # 実験回数、確率、サンプル数"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0KUCjywXOZou","executionInfo":{"status":"ok","timestamp":1682406341382,"user_tz":-540,"elapsed":226,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"72d8f07a-e250-4da6-a033-2a9f5ad9f9e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["import numpy as np\n","np.random.binomial(100,0.3, 1) # 実験回数、確率、サンプル数"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O9aLKIsK875N","executionInfo":{"status":"ok","timestamp":1713926043072,"user_tz":-540,"elapsed":11,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"3ed6d9f5-2068-466a-ad16-12a05e252807"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([30])"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["import numpy as np\n","np.random.binomial(100,0.3, 100) # 実験回数、確率、サンプル数"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYCpFo-L9AHZ","executionInfo":{"status":"ok","timestamp":1713926052896,"user_tz":-540,"elapsed":337,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"41a53d02-c4d9-410f-e495-c460876649c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([31, 29, 38, 27, 34, 39, 26, 25, 26, 30, 29, 29, 28, 33, 18, 18, 26,\n","       28, 35, 23, 26, 23, 32, 30, 28, 27, 31, 31, 33, 27, 30, 34, 27, 31,\n","       37, 27, 24, 30, 25, 31, 31, 35, 41, 35, 34, 28, 38, 33, 32, 28, 34,\n","       35, 39, 30, 27, 27, 27, 27, 35, 34, 28, 20, 28, 31, 39, 35, 28, 31,\n","       29, 22, 30, 18, 31, 36, 25, 29, 31, 37, 36, 39, 23, 27, 24, 30, 34,\n","       23, 34, 24, 33, 31, 34, 25, 32, 27, 28, 30, 28, 25, 32, 27])"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["- 二項分布\n","\n","$$\n","P(x=k) = _nC_kp^k\\left(1-p\\right)^{(n-k)}　　(k=0,1,2,...,n)\n","$$"],"metadata":{"id":"p13h-i-Qhgoo"}},{"cell_type":"code","source":["# 二項分布\n","import numpy as np\n","np.random.binomial(100,0.3, 1) # 実験回数、確率、サンプル数"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ueLvp0H6n3Ef","executionInfo":{"status":"ok","timestamp":1682641717888,"user_tz":-540,"elapsed":245,"user":{"displayName":"銀河","userId":"16450448122595155493"}},"outputId":"6adb25e1-895b-48d0-8d95-a57bd5236f27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([37])"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["この結果は,表になる確率が0.3のコインを100回投げた実験で、表になった回数が結果になっています。"],"metadata":{"id":"qwQlLqTcO-g1"}},{"cell_type":"markdown","source":["###<font color='crimson'>[実践1]コイン当てゲーム(5 mins)</font>\n","\n","コインを一回投げて、表か裏かを当てるプログラムを書いてみてください。以下の条件を満足する必要があります。\n","\n","1. 一回コインを投げる実験を行います。\n","\n","1. あなたが裏、表を当てます。\n","\n","1. 当たってるかどうかの結果をプリントします。"],"metadata":{"id":"QiURStRaWHKT"}},{"cell_type":"code","source":["# 課題\n","import numpy as np\n","def coin_guess():\n","  print('### コイン当てゲーム　Ver.1.0')\n","  print('\\nコイン当てゲームです。表なら[1], 裏なら[0]を入力してください。')\n","  coin = np.random.binomial(1,0.5, 1) # 実験回数、確率、サンプル数 #ベルヌーイ試行\n","  choice = int(input())\n","  if coin == choice:\n","    print(\"あたり\")\n","  else:\n","    print(\"はずれ\")"],"metadata":{"id":"CuJ1NcaQWEdj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["coin_guess()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FRb9z8AKSg7U","executionInfo":{"status":"ok","timestamp":1713961306195,"user_tz":-540,"elapsed":6244,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"f9adfc38-5d20-47a3-861b-e7fb1dd857cd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["### コイン当てゲーム　Ver.1.0\n","\n","コイン当てゲームです。表なら[1], 裏なら[0]を入力してください。\n","1\n","あたり\n"]}]},{"cell_type":"markdown","source":["###<font color='crimson'>[実践2]サイコロ実験(5 mins)</font>\n","\n","サイコロを２回投げて、出た数字の足し算を出力する関数を作ってください。"],"metadata":{"id":"r-hdxvvEYJe0"}},{"cell_type":"code","source":["# 課題\n","import numpy as np\n","\n","rand = np.random.randint(1,7, 2)\n","rand.sum()"],"metadata":{"id":"5CFAy1fRYI4T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713927105379,"user_tz":-540,"elapsed":8,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"e68c0125-d1be-4d4e-8a7d-c9619cf0b390"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2])"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["rand = np.random.randint(1,7, 5) #下限、上限（含まない）、乱数の数\n","rand[:2].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QVWx67JEBGuh","executionInfo":{"status":"ok","timestamp":1713927183815,"user_tz":-540,"elapsed":7,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"b994578b-edf6-4f90-ec15-7a005abaccd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["rand[1:-1].sum() #最初と最後以外の合計"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dU11CLc9BXxf","executionInfo":{"status":"ok","timestamp":1713927194872,"user_tz":-540,"elapsed":7,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"ee6edc57-ce17-4013-d493-ecee4a9a25f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["###<font color='crimson'>[実践3]大数の法則(10 mins)</font>\n","\n","大数の法則は**<font color='crimson'>独立同分布に従う可積分な確率変数列の標本平均は平均に収束する</font>**と述べられます。\n","\n","以下の実験を行い、結果を可視化してみてください。\n","\n","1. 表になる確率が0.5のコインを投げる実験を1000回行います。\n","\n","1. 毎回の実験後、今まで表になった**確率**を記録します。（５回目だと、５回目までに表になった確率を記録）\n","\n","1. 1000回の確率を折り線で可視化してください。"],"metadata":{"id":"iuUikbSeOIsL"}},{"cell_type":"code","source":["# 課題\n","# ベルヌーイ分布\n","import numpy as np\n","coin=np.random.binomial(1,0.5, 1000) # 実験回数、確率、サンプル数\n","coin"],"metadata":{"id":"YnzDr7C0SbTt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713927386568,"user_tz":-540,"elapsed":414,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"f77cf63f-4de3-4b76-e617-a5fbab180de6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n","       1, 0, 0, 1, 1, 0, 1, 0, 0, 0])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["records = np.zeros(1000) #データ保存用\n","for i in range(1000):\n","  s = coin[:(i+1)].sum() #成功＝1より、成功の回数\n","  l=len(coin[:(i+1)])\n","  prop=s/l\n","  records[i]=prop"],"metadata":{"id":"Gw3ADkaQCJrK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(records)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"ajwWnehpC7bZ","executionInfo":{"status":"ok","timestamp":1713927676081,"user_tz":-540,"elapsed":398,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"d59f3871-965f-4ec0-dc05-da6ba5bb5810"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### **シミュレーションによる経験的確率**\n","\n","経験的確率とは、実際に試行を繰り返して測られる確率のことです。統計的確率ともいいます。\n","\n","もう一回計量第一回の授業のタクシー問題を考えます。\n","\n","タクシーで仙台駅まで行き，20時15分の東京行の新幹線に乗りたいとする．道路の混雑状況が日によってまちまちであるため，仙台駅までの所要時間は不確実である．過去の経験から推して所要時間は$𝑁(20,5^2)$になる．\n","\n","- 19時50分にタクシーに乗車したとすれば，列車に乗り遅れる確率はどれくらいか．\n"],"metadata":{"id":"Ezdo7vqa2vnU"}},{"cell_type":"markdown","source":["この問題は、乱数を使っても経験的に正解に近い答えを出すことが可能です。"],"metadata":{"id":"meKv7kECjYvJ"}},{"cell_type":"code","source":["# チャレンジ\n","import numpy as np\n","\n","rand = np.random.normal(20,5, 1000) # 平均, 分散, 乱数の数\n","\n","# 列車の出発時刻\n","train_departure_time = 20 * 60 + 15  # 分単位で表現\n","\n","# タクシーに乗車する時刻\n","taxi_boarding_time = 19 * 60 + 50  # 分単位で表現\n","\n","# 列車に乗り遅れるカウンター\n","missed_train_count = 0\n","\n","# シミュレーション実行\n","for i in range(1000):\n","    # 列車到着時刻の計算\n","    train_arrival_time = taxi_boarding_time + rand\n","    # 列車に間に合うかどうかを確認\n","    if np.all(train_arrival_time > train_departure_time):\n","        missed_train_count += 1\n","\n","# 列車に乗り遅れる確率を計算\n","missed_train_probability = missed_train_count / 1000\n","\n","print(\"列車に乗り遅れる確率:\", missed_train_probability)\n"],"metadata":{"id":"nT1JEGI3jmeR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713962805731,"user_tz":-540,"elapsed":8,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"aead35ea-8d30-410a-d8c4-30e51caea817"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["列車に乗り遅れる確率: 0.0\n"]}]},{"cell_type":"code","source":["#チャレンジ　回答\n","import numpy as np\n","times = np.random.normal(20,5,1000)\n","\n","n=(times>25).sum() #(function).sum()... 関数を満たす変数の個数\n","print(\"遅刻する確率は\",n/1000,\"です。\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4cKak4V8rGxH","executionInfo":{"status":"ok","timestamp":1714089511240,"user_tz":-540,"elapsed":252,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"4aeb3673-478c-4e7c-9060-063f3adec758"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["遅刻する確率は 0.158 です。\n"]}]},{"cell_type":"markdown","source":["ピッタリ一致するわけではありませんが、期待値$0.158655$に近い答えが得られました。"],"metadata":{"id":"O10u3MspkqOp"}},{"cell_type":"markdown","source":["### seed"],"metadata":{"id":"3_VsM5qElE2K"}},{"cell_type":"markdown","source":["<a name='ref_seed'></a>\n","**np.random.seed()**\n","\n","　seedは、乱数生成の際に、他人が同じコードで同じ乱数を獲得できるような、**再現可能**な乱数生成のために使われてます。主な目的としては、論文などにおける実験の再現などを保障するために必要な関数です。\n","　ここで、0から99をランダムに100個生成する例を、seedなし、ありで比較してみます。"],"metadata":{"id":"ESbe3tGqPUMj"}},{"cell_type":"code","source":["# seed なしの場合\n","print(np.random.randint(0,100, 100))\n","print(np.random.randint(0,100, 100))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ngstbh8P-_r","executionInfo":{"status":"ok","timestamp":1714089749840,"user_tz":-540,"elapsed":383,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"79f16a8a-dea1-48d8-fa14-b7bfc3577d99"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[89 58 17 58 76 89 72 22 52  1 82 24 84 52 77 15 30 37  0 71 57 78 16 11\n"," 34 96 49 81 64 85 86 90 33 79 75 58  8 27 16 98 55 49 41 22 36  7 72 55\n"," 61 18 57 51 46 26 71 26 56 95 47 71 45 72 93 32 23 94 92 47 22 25  7 46\n"," 66  2 79 64 76 44 38 36 99 81 16 48 22 74 93 89  5 80 88 54 19 48 47 41\n"," 37 28 46  9]\n","[80 19 47 83 26 53 93 10 74 96 89 60 11 26 74 83 50 89 49 68 37 58 80 17\n"," 57 94 10 15 54 19 97 97 43 95  6 59 77 20 28 99 56  5 54 56 36 47 77  9\n"," 36 47 62 23 94 55 18 41 90  5 55 45 30 74 97 71 28 98 53 91 96  5 89 31\n"," 96 71 71 13  1 94 51 71 49 57 59 10 47 23 56 79 78 90 11 97 36 15 46 85\n"," 84 85  1 35]\n"]}]},{"cell_type":"code","source":["# seed ありの場合\n","np.random.seed(1)\n","print(np.random.randint(0,100, 100))\n","np.random.seed(1)\n","print(np.random.randint(0,100, 100))\n","np.random.seed(1000)\n","print(np.random.randint(0,10,10))\n","np.random.seed(1000)\n","print(np.random.randint(0,10,10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4fI6Z4kLQLm7","executionInfo":{"status":"ok","timestamp":1714089840730,"user_tz":-540,"elapsed":282,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}},"outputId":"9654f10c-a44d-4819-8da1-abc9590e411d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[37 12 72  9 75  5 79 64 16  1 76 71  6 25 50 20 18 84 11 28 29 14 50 68\n"," 87 87 94 96 86 13  9  7 63 61 22 57  1  0 60 81  8 88 13 47 72 30 71  3\n"," 70 21 49 57  3 68 24 43 76 26 52 80 41 82 15 64 68 25 98 87  7 26 25 22\n","  9 67 23 27 37 57 83 38  8 32 34 10 23 15 87 25 71 92 74 62 46 32 88 23\n"," 55 65 77  3]\n","[37 12 72  9 75  5 79 64 16  1 76 71  6 25 50 20 18 84 11 28 29 14 50 68\n"," 87 87 94 96 86 13  9  7 63 61 22 57  1  0 60 81  8 88 13 47 72 30 71  3\n"," 70 21 49 57  3 68 24 43 76 26 52 80 41 82 15 64 68 25 98 87  7 26 25 22\n","  9 67 23 27 37 57 83 38  8 32 34 10 23 15 87 25 71 92 74 62 46 32 88 23\n"," 55 65 77  3]\n","[3 7 7 0 1 0 9 8 9 4]\n","[3 7 7 0 1 0 9 8 9 4]\n"]}]},{"cell_type":"markdown","source":["以上, seedがない場合、乱数は毎回入れ替わり、前回の結果は再現不可能になる半面、**seed**を設定すると、同じ**seed**で前回と同じ結果になることがわかります。\n","\n","今後、研究や課題などで、シミュレーション実験を行う際には、seedをつけることで、結果の再現性を実現し、研究結果の信憑性に繋がります。"],"metadata":{"id":"fTifKTnlQeYj"}},{"cell_type":"markdown","source":["###<font color='crimson'>[実践]じゃんけんゲーム(残り時間)</font>\n","\n","- AI(?)とじゃんけんをするゲームを作ってみてください。\n","\n","今まで勉強したものをフル活用し、この課題に挑んでみてください。\n","\n","\n","\n","**ルール**:\n","\n","1. どちらかが先に二回勝ったら終わります。\n","\n","1. AIはグー、チョキ、パーを全く同じ確率でランダムに出します。\n","\n","1. AIがどちらかを決めたら、あなた自身もinput()で何を出すか決めます。\n","\n","1. 同じの場合(チョキとチョキ）、引き分けとし、次の勝負に行きます。\n","\n","\n","[初心者](https://colab.research.google.com/drive/1aWGN_jOyl0Xqrzrc3o773Ebv5HbYx0hW?usp=sharing) (全コードあり。なるべくプログラミングのロジックを理解してください。)\n","\n","[中級者](https://colab.research.google.com/drive/1Ax6IoO7UxUnB1CJm9INDfDavvlTys175?usp=sharing) (一部コード＋ヒントあり）\n","\n","[上級者](https://colab.research.google.com/drive/1-jlD49Me4G1au2DZEwEP8Inf0xoZHyi6?usp=sharing) (なにもなし）"],"metadata":{"id":"vvtyG92qmiio"}},{"cell_type":"code","source":["# 課題\n","import numpy as np\n","\n","def jan_ken():\n","  print('#じゃんけんゲーム (ver1.0)')\n","  print('ルール：先に二回勝った方が勝ちです。')\n","  #手の定義\n","  name=[\"グー\",\"チョキ\",\"パー\"]\n","  #メッセージの定義\n","  mess=[\"あなたの勝ち\",\"あなたの負け\",\"引き分け\"]\n","  #勝敗数の定義と初期値\n","  my_win=0\n","  ai_win=0\n","\n","  for i in range(3):\n","    print(i+1,\"回目の勝負\")\n","    #自分が出す手を決める（input関数）\n","    print('グー[0], チョキ[1], パー[2]の中からあなたが出したい手の数字を選んでください。 ')\n","    my_choice=int(input())\n","    print(\"あなたは\",name[my_choice],\"を選びました。\")\n","    #AIが出す手を決める\n","    ai_choice = np.random.randint(0,3) # 下限、上限, 乱数の数　（int...整数）\n","    print(\"AIは\",name[ai_choice],\"を選びました。\")\n","    #メッセージ表示\n","    me=\"\"\n","    #条件分岐\n","    if my_choice==ai_choice:\n","      me=mess[2]\n","    if (my_choice == 0 and ai_choice== 1) or (my_choice == 1 and ai_choice == 2) or (my_choice == 2 and ai_choice == 0):\n","      me=mess[0]\n","      my_win+=1\n","    if  (my_choice == 1 and ai_choice== 0) or (my_choice == 2 and ai_choice == 1) or (my_choice == 0 and ai_choice == 2) :\n","      me=mess[1]\n","      ai_win+=1\n","\n","    #勝敗メッセージ\n","    print(me)\n","    # 勝利回数\n","    print('あなたの勝利回数:', my_win)\n","    print('AIの勝負回数:', ai_win)\n","    # 二回勝ったかどうか\n","    if my_win >= 2:\n","      print(\"あなたが先に2回勝ったため、あなたの勝利です。\")\n","      return None\n","    elif ai_win >=2:\n","      print(\"AIが先に2回勝ったため、AIの勝利です。\")\n","      return None\n","    else:\n","      print('まだだれも２回勝っていません、次の勝負に行きます。\\n')\n"],"metadata":{"id":"OTVBH3gl9cRh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","#デバック用\n","jan_ken()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oUIvS81HL9Ie","outputId":"96e2306b-7c5d-4311-f889-a982351c727c","executionInfo":{"status":"ok","timestamp":1714089597710,"user_tz":-540,"elapsed":16574,"user":{"displayName":"鈴木由楽","userId":"12702162578142968440"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["#じゃんけんゲーム (ver1.0)\n","ルール：先に二回勝った方が勝ちです。\n","1 回目の勝負\n","グー[0], チョキ[1], パー[2]の中からあなたが出したい手の数字を選んでください。 \n","0\n","あなたは グー を選びました。\n","AIは チョキ を選びました。\n","あなたの勝ち\n","あなたの勝利回数: 1\n","AIの勝負回数: 0\n","まだだれも２回勝っていません、次の勝負に行きます。\n","\n","2 回目の勝負\n","グー[0], チョキ[1], パー[2]の中からあなたが出したい手の数字を選んでください。 \n","1\n","あなたは チョキ を選びました。\n","AIは チョキ を選びました。\n","引き分け\n","あなたの勝利回数: 1\n","AIの勝負回数: 0\n","まだだれも２回勝っていません、次の勝負に行きます。\n","\n","3 回目の勝負\n","グー[0], チョキ[1], パー[2]の中からあなたが出したい手の数字を選んでください。 \n","2\n","あなたは パー を選びました。\n","AIは グー を選びました。\n","あなたの勝ち\n","あなたの勝利回数: 2\n","AIの勝負回数: 0\n","あなたが先に2回勝ったため、あなたの勝利です。\n"]}]}]}